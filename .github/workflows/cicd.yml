name: Django Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r test-requirements.txt
    - name: Run Ruff
      run: ruff check --output-format=github .
    - name: Run Tests
      run: pytest

  Coverage:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r test-requirements.txt
    - name: Create coverage report
      run: |
        pytest --junitxml=test-results/unittest.xml --cov --cov-report=xml:test-results/coverage.xml
        genbadge coverage -i test-results/coverage.xml -o test-results/coverage.svg -n "Test Coverage"
    - name: Upload coverage results
      id: upload-artefact
      uses: actions/upload-artifact@v4
      with:
        name: test-coverage-results
        path: test-results/*
      if: ${{ always() }}
    - name: Push changes
      run: |
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
