name: Django Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r test-requirements.txt
    - name: Run Ruff
      run: ruff check --output-format=github .
    - name: Run Tests
      run: pytest

  Coverage:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r test-requirements.txt
    - name: Create coverage report
      run: |
        pytest --junitxml=test-results/unittest.xml --cov --cov-report=xml:test-results/coverage.xml
        genbadge coverage -i test-results/coverage.xml -o test-results/coverage.svg -n "Test Coverage"
    - name: Upload coverage results
      uses: actions/upload-artifact@v4
      with:
        name: test-coverage-results
        path: test-results/*
      if: ${{ always() }}
    - name: Download artifact
      id: download-artifact
      uses: dawidd6/action-download-artifact@v6
      with:
        # If no workflow is set and workflow_search set to true, then the most recent workflow matching
        # all other criteria will be looked up instead of using the current workflow
        workflow_search: false
        # Optional, the status or conclusion of a completed workflow to search for
        # Can be one of a workflow conclusion:
        #   "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
        # Or a workflow status:
        #   "completed", "in_progress", "queued"
        # Use the empty string ("") to ignore status or conclusion in the search
        workflow_conclusion: success
        # Optional, will get head commit SHA
        pr: ${{github.event.pull_request.number}}
        # Optional, no need to specify if PR is
        commit: ${{github.event.pull_request.head.sha}}
        # Optional, will use the specified branch. Defaults to all branches
        branch: master
        # Optional, check the workflow run to whether it has an artifact
        # then will get the last available artifact from the previous workflow
        # default false, just try to download from the last one
        check_artifacts: false
        # Optional, search for the last workflow run whose stored an artifact named as in `name` input
        # default false
        search_artifacts: false
        # Optional, choose to skip unpacking the downloaded artifact(s)
        # default false
        skip_unpack: false
        # Optional, choose how to exit the action if no artifact is found
        # can be one of:
        #  "fail", "warn", "ignore"
        # default fail
        if_no_artifact_found: fail
        # Optional, include forks when searching for artifacts
        # default false
        allow_forks: true
#    - name: Download coverage svg
#      uses: actions/download-artifact@v4
#      with:
#        name: coverage.svg
#        path: test-results/
