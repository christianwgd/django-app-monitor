name: Django Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r test-requirements.txt
    - name: Run Ruff
      run: ruff check --output-format=github .
    - name: Run Tests
      run: pytest

  Coverage:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r test-requirements.txt
    - name: Create coverage report
      run: |
        pytest --junitxml=test-results/unittest.xml --cov --cov-report=xml:test-results/coverage.xml
        genbadge coverage -i test-results/coverage.xml -o test-results/coverage.svg -n "Test Coverage"
    - name: Upload pytest test results
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results
        path: test-results-${{ matrix.python-version }}.xml
      if: ${{ always() }}
#    - name: Publish Test Results
#      uses: EnricoMi/publish-unit-test-result-action@v2
#      with:
#        files: |
#          "test-results/unittest.xml"
#          "test-results/coverage.xml"
#          "test-results/coverage.svg"
#    - name: Commit Changed Files
#      run: |
#        git config --local user.email "action@github.com"
#        git config --local user.name "GitHub Action"
#        git add --all
#        git commit -m "Add changes" -a
#    - name: Check in of coverage svg
#      uses: stefanzweifel/git-auto-commit-action@v5
#      with:
#        commit_message: 'Update coverage svg'
#        file_pattern: 'coverage.svg'
#    - name: Upload svg
#      uses: actions/upload-artifact@v4
#      with:
#        name: coverage-svg
#        path: "./coverage.svg"
#    - name: Upload to codecov.io
#      uses: codecov/codecov-action@v3
#      env:
#        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
#    - name: Archive code coverage results
#      uses: actions/upload-artifact@v3
#      with:
#        name: code-coverage-report
#        path: coverage.xml